{"version":3,"sources":["components/navigation/drawer/drawer.module.css","components/ui/input/input.module.css","components/navigation/menu-toggle/menu-toggle.module.css","containers/quiz/quiz.module.css","components/active-quiz/active-quiz.module.css","components/active-quiz/answers-list/answer-item/answer-item.module.css","components/finished-quiz/finished-quiz.module.css","components/ui/button/button.module.css","components/ui/loader/loader.module.css","hoc/layout/layout.module.css","components/ui/backdrop/backdrop.module.css","components/active-quiz/answers-list/answers-list.module.css","containers/quiz-creator/quiz-creator.module.css","components/ui/select/select.module.css","containers/quiz-list/quiz-list.module.css","containers/auth/auth.module.css","redux/reducers/quiz.js","redux/reducers/quiz-creator.js","redux/reducers/auth.js","redux/reducers/index.js","redux/action/action-types.js","components/navigation/menu-toggle/index.js","components/navigation/menu-toggle/menu-toggle.js","components/ui/backdrop/index.js","components/ui/backdrop/backdrop.js","components/navigation/drawer/index.js","components/navigation/drawer/drawer.js","hoc/layout/layout.js","hoc/layout/index.js","components/active-quiz/answers-list/answer-item/index.js","components/active-quiz/answers-list/answer-item/answer-item.js","components/active-quiz/answers-list/index.js","components/active-quiz/answers-list/answers-list.js","components/active-quiz/index.js","components/active-quiz/active-quiz.js","components/ui/button/index.js","components/ui/button/button.js","components/finished-quiz/index.js","components/finished-quiz/finished-quiz.js","components/ui/loader/index.js","components/ui/loader/loader.js","axios/axios-quiz.js","redux/action/quiz.js","containers/quiz/quiz.js","containers/quiz/index.js","components/ui/input/input.js","components/ui/input/index.js","form/form-framework.js","components/auxiliary/index.js","components/ui/select/index.js","components/ui/select/select.js","containers/quiz-creator/quiz-creator.js","containers/quiz-creator/index.js","redux/action/quiz-creator.js","containers/quiz-list/quiz-list.js","containers/quiz-list/index.js","redux/action/auth.js","containers/auth/auth.js","containers/auth/index.js","components/logout/logout.js","components/logout/index.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","initialState","quizes","loading","error","activeQuestion","stateAnswer","isFinished","results","quiz","token","combineReducers","state","action","type","create","item","auth","MenuToggle","menu","onMenuToggle","cls","classes","push","className","join","onClick","Backdrop","backdrop","Drawer","onDrawerClick","isAuthenticated","close","links","to","label","exact","map","link","index","key","activeClassName","active","connect","Layout","children","useState","setMenu","layout","AnswerItem","answer","id","AnswersList","answers","onAnswerClick","ActiveQUiz","quizLength","question","Button","disabled","e","FinishedQuiz","onRetry","successCount","Object","keys","reduce","total","quizItem","length","Loader","loader","axios","baseURL","quizAnswerClick","answerId","dispatch","getState","rightAnswerId","setQuiz","setTimeout","isQuizFinished","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","fetchQuizesError","Quiz","fetchQuizById","quizId","a","get","res","data","retryQuiz","props","useEffect","match","params","Input","isInvalid","valid","touched","shouldValidate","inputType","htmlFor","Math","random","input","invalid","value","onChange","onBlur","errorMessage","defaultProps","formFramework","config","validation","Auxiliary","Select","select","options","option","text","createOptionCotrol","number","required","createFormCotrols","option1","option2","option3","option4","QuizCreator","addQuizQuestion","createQuiz","post","isFormValid","formControls","setState","target","onSubmit","console","log","control","controlName","isValid","trim","validate","hasOwnProperty","validateForm","changeHandler","preventDefault","addQuestion","QuizList","fetchQuizes","response","forEach","name","fetchData","useCallback","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","email","password","isLogin","authData","returnSecureToken","url","expiresIn","Date","getTime","setItem","idToken","localId","minLength","registerHandler","event","test","indexOf","inputTouchedHandler","Logout","withRouter","App","autoLogin","getItem","expirationDate","routes","path","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1516662.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"drawer_drawer__1dvXP\",\"close\":\"drawer_close__bo4rX\",\"active\":\"drawer_active__2QjXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2p_s3\",\"invalid\":\"input_invalid__q_Si_\",\"valid\":\"input_valid__UrmtC\",\"error\":\"input_error__3zMvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-toggle\":\"menu-toggle_menu-toggle__2xRPe\",\"opened\":\"menu-toggle_opened__1XPLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz\":\"quiz_quiz__2rimX\",\"quiz-wrapper\":\"quiz_quiz-wrapper__2KAD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active-quiz\":\"active-quiz_active-quiz__2jBm2\",\"active-quiz-answers\":\"active-quiz_active-quiz-answers___Z1FG\",\"active-quiz-question\":\"active-quiz_active-quiz-question__3lxj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer-item\":\"answer-item_answer-item__1FTkK\",\"success\":\"answer-item_success__UwD3Z\",\"error\":\"answer-item_error__1vzwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"finished-quiz-list\":\"finished-quiz_finished-quiz-list__13e3Y\",\"success\":\"finished-quiz_success__3XeYM\",\"error\":\"finished-quiz_error__HAkyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__6T0dl\",\"button_primary\":\"button_button_primary__2ee1c\",\"button_success\":\"button_button_success__2KVly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader-wrapper\":\"loader_loader-wrapper__3LyiG\",\"loader\":\"loader_loader__3X-6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__3y065\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__3yQjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answers-list\":\"answers-list_answers-list__iy5eD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz-creator\":\"quiz-creator_quiz-creator__2devR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__s4OG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz-list\":\"quiz-list_quiz-list__i88z7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"auth_auth__1d3sn\"};","import { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZE_SUCCESS, SET_QUIZ, NEXT_QUIZ, QUIZ_FINISHED, RETRY_QUIZ } from '../action/action-types';\r\n\r\nconst initialState  = {\r\n    quizes: [], \r\n    loading: true,\r\n    error: null,\r\n    activeQuestion: 0,\r\n    stateAnswer: null,\r\n    isFinished: false,\r\n    results: {},\r\n    quiz: [],\r\n}\r\n\r\nexport const quizReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case  FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case FETCH_QUIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                quiz: action.quiz,\r\n                loading: false\r\n            }\r\n        case SET_QUIZ:\r\n            return {\r\n                ...state,\r\n                stateAnswer: action.stateAnswer,\r\n                results: action.results\r\n            }\r\n        case NEXT_QUIZ:\r\n            return {\r\n                ...state,\r\n                activeQuestion: action.activeQuestion,\r\n                stateAnswer: null\r\n            }\r\n        case QUIZ_FINISHED:\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        case RETRY_QUIZ:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                stateAnswer: null,\r\n                isFinished: false,\r\n                results: {} \r\n            }\r\n        default: return state; \r\n    }\r\n}","import { ADD_QUIZ_QUESTION, RESET_QUIZ_CREATION } from '../action/action-types';\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport const quizCreatorReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_QUIZ_QUESTION: \r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import { AUTH_SUCCESS, LOGOUT } from '../action/action-types';\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case AUTH_SUCCESS: \r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {quizReducer} from './quiz';\r\nimport {quizCreatorReducer} from './quiz-creator';\r\nimport {authReducer} from './auth';\r\n\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: quizCreatorReducer,\r\n    auth: authReducer\r\n});","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZE_SUCCESS = 'FETCH_QUIZE_SUCCESS';\r\n\r\nexport const SET_QUIZ = 'SET_QUIZ';\r\nexport const NEXT_QUIZ = 'NEXT_QUIZ';\r\nexport const QUIZ_FINISHED = 'QUIZ_FINISHED';\r\nexport const RETRY_QUIZ = 'RETRY_QUIZ';\r\n\r\n\r\nexport const ADD_QUIZ_QUESTION  = 'ADD_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';","import MenuToggle from './menu-toggle';\r\nexport default MenuToggle;","import React from 'react'\r\nimport classes from './menu-toggle.module.css';\r\n\r\n\r\nconst MenuToggle = ({ menu, onMenuToggle }) => {\r\n\r\n    let cls = [classes['menu-toggle'], 'fa'];\r\n    if ( menu ) {\r\n        cls.push('fa-times')\r\n        cls.push(classes['opened'])\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={() => onMenuToggle()}/>\r\n    )\r\n}\r\n\r\nexport default MenuToggle;\r\n","import Backdrop from './backdrop';\r\nexport default Backdrop;","import React from 'react'\r\n\r\nimport classes from './backdrop.module.css';\r\n\r\nconst Backdrop = ({ onClick }) => {\r\n    return (\r\n        <div onClick={() => onClick()} className={classes.backdrop}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop;\r\n","import Drawer from './drawer';\r\nexport default Drawer;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './drawer.module.css';\r\nimport Backdrop from '../../ui/backdrop';\r\n\r\nconst Drawer = ({ menu, onDrawerClick, isAuthenticated }) => {\r\n\r\n    let cls = [classes['drawer']]\r\n    if ( !menu ) {\r\n        cls.push(classes.close);\r\n    }\r\n    let links = [\r\n        { to: '/', label: 'Главная страница', exact: true },\r\n        { to: '/auth', label: 'Авторизация', exact: false }\r\n    ];\r\n\r\n    if (isAuthenticated) {\r\n        links = [\r\n            { to: '/', label: 'Главная страница', exact: true },\r\n            { to: '/quiz-creator', label: 'Создать тест', exact: false },\r\n            { to: '/logout', label: 'Выйти', exact: false }\r\n        ];\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { menu && <Backdrop menu={menu} onClick={onDrawerClick} /> }\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {\r\n                        links.map((link, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <NavLink \r\n                                        to={link.to}\r\n                                        exact={link.exact}\r\n                                        activeClassName={classes.active}\r\n                                        onClick={() => onDrawerClick()}\r\n                                        >\r\n                                        { link.label }\r\n                                    </NavLink>\r\n                                </li>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { useState } from 'react'\r\nimport classes from './layout.module.css'\r\n\r\nimport MenuToggle from '../../components/navigation/menu-toggle';\r\nimport Drawer from '../../components/navigation/drawer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Layout = ({ children, isAuthenticated }) => {\r\n\r\n    const [menu, setMenu] = useState(false);\r\n\r\n    const onMenuToggleHandler = () => {\r\n        setMenu(!menu)\r\n    }\r\n\r\n    const onDrawerCloseHandler = () => {\r\n        setMenu(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Drawer menu={menu} onDrawerClick={onDrawerCloseHandler} isAuthenticated={isAuthenticated} />\r\n            <MenuToggle onMenuToggle={onMenuToggleHandler} menu={menu} />\r\n\r\n            <main>\r\n                {\r\n                    children\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import Layout from './layout';\r\nexport default Layout;","import AnswerItem from './answer-item';\r\nexport default AnswerItem;","import React from 'react'\r\nimport classes from './answer-item.module.css';\r\n\r\nconst AnswerItem = ({ answer, id, state }) => {\r\n\r\n    let cls = [classes['answer-item']];\r\n    if ( state ) {\r\n        cls.push(classes[state])\r\n    }\r\n\r\n    return (\r\n        <span className={cls.join(' ')}>\r\n            { answer }\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;\r\n","import AnswersList from './answers-list';\r\nexport default AnswersList;","import React from 'react'\r\nimport classes from './answers-list.module.css';\r\n\r\nimport AnswerItem from './answer-item';\r\n\r\nconst AnswersList = ({ answers, onAnswerClick, state }) => {\r\n    return (\r\n        <ul className={classes['answers-list']}>\r\n            {\r\n                answers.map(({ answer, id }) => {\r\n                    return (\r\n                        <li \r\n                            key={id}\r\n                            onClick={() => onAnswerClick(id)}\r\n                            >\r\n                            <AnswerItem answer={answer} state={state ? state[id] : null}  />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList;\r\n","import ActiveQUiz from './active-quiz';\r\nexport default ActiveQUiz;","import React from 'react'\r\nimport classes from './active-quiz.module.css';\r\n\r\nimport AnswersList from './answers-list';\r\n\r\nconst ActiveQuiz = ({ quiz, onAnswerClick, quizLength, activeQuestion, state }) => {\r\n    return (\r\n        <div className={classes['active-quiz']}>\r\n            <p className={classes['active-quiz-question']}>\r\n            <span><strong>{ activeQuestion + 1 }.</strong>&nbsp;{ quiz.question }</span>\r\n            <span>{activeQuestion + 1} из {quizLength}</span>\r\n            </p>\r\n            <AnswersList \r\n                answers={quiz.answers} \r\n                onAnswerClick={onAnswerClick}\r\n                state={state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz;\r\n","import Button from './button';\r\nexport default Button;","import React from 'react'\r\nimport classes from './button.module.css';\r\n\r\nconst Button = ({ children, type, onClick, disabled }) => {\r\n    let cls = [classes['button'], classes['button_' + type]];\r\n    return (\r\n        <button\r\n            disabled={disabled} \r\n            className={cls.join(' ')}\r\n            onClick={(e) => onClick ? onClick(e) : null}\r\n            >\r\n            { children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import FinishedQuiz from './finished-quiz';\r\nexport default FinishedQuiz;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './finished-quiz.module.css';\r\n\r\nimport Button from '../ui/button';\r\n\r\nconst FinishedQuiz = ({ quiz, results, onRetry }) => {\r\n    const successCount = Object.keys(results).reduce((total, key) => {\r\n        if ( results[key] === 'success' ) {\r\n            total++;\r\n        }\r\n        return total;\r\n    }, 0)\r\n    return (\r\n        <div>\r\n            <h1>Ваши ответы</h1>\r\n            <ul className={classes['finished-quiz-list']}>\r\n                {\r\n                    quiz.map((quizItem, index) => {\r\n                        const cls = [\r\n                            'fa',\r\n                            results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                            classes[results[quizItem.id]]\r\n                        ];\r\n\r\n                        return (\r\n                            <li key={index}>\r\n                                <strong>{index + 1}. </strong>&nbsp;\r\n                                {quizItem.question}\r\n                                <i className={cls.join(' ')} />\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n            <p>\r\n                Правильно { successCount } из { quiz.length }\r\n            </p>\r\n            <Button onClick={onRetry} type=\"primary\">Начать заново</Button>\r\n            <Link to=\"/\"><Button type=\"success\">Список тестов</Button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz;\r\n","import Loader from './loader';\r\nexport default Loader;","import React from 'react'\r\nimport classes from './loader.module.css'\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className={classes['loader-wrapper']}>\r\n            <div className={classes.loader}><div /><div/><div/><div/><div/><div/><div/><div /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-3d8cb.firebaseio.com'\r\n})","import { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZE_SUCCESS, SET_QUIZ, NEXT_QUIZ, QUIZ_FINISHED, RETRY_QUIZ } from './action-types';\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport function fetchQuizes() {\r\n    return async (dispatch) => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const response = await axios.get('/quizes.json');\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: 'Тест №' + index + 1\r\n                })\r\n            })\r\n            dispatch(fetchQuizesSuccess(quizes));\r\n        } catch(e) {\r\n            dispatch(fetchQuizesError(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async (dispatch) => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const res = await axios.get(`/quizes/${quizId}.json`);\r\n            const quiz = res.data; \r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch(e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz;\r\n        if ( state.stateAnswer ) {\r\n            const key = Object.keys(state.stateAnswer);\r\n            if ( state.stateAnswer[key] === 'success' ) {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion];\r\n        const results = state.results;\r\n\r\n        if ( +question.rightAnswerId === answerId ) {\r\n\r\n            if ( !results[question.id] ) {\r\n                results[question.id] = 'success';\r\n            }\r\n\r\n            dispatch(setQuiz({ [answerId]: 'success' }, results))\r\n\r\n            setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(quizFinished())\r\n                    // setState({...state, isFinished: true})\r\n                } else {\r\n                    dispatch(nextQuiz(state.activeQuestion + 1))\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            results[question.id] = 'error';\r\n            dispatch(setQuiz({ [answerId]: 'error' }, results))\r\n        }\r\n    }\r\n}\r\n\r\nfunction nextQuiz(activeQuestion) {\r\n    return {\r\n        type: NEXT_QUIZ,\r\n        activeQuestion\r\n    }\r\n}\r\n\r\nfunction setQuiz(stateAnswer, results) {\r\n    return {\r\n        type: SET_QUIZ,\r\n        stateAnswer,\r\n        results\r\n    }\r\n}\r\n\r\n\r\nfunction quizFinished() {\r\n    return {\r\n        type: QUIZ_FINISHED\r\n    }\r\n}\r\n\r\nfunction fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZE_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nfunction fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\nfunction fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\nfunction fetchQuizesError(error) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: RETRY_QUIZ\r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport classes from './quiz.module.css';\r\nimport ActiveQuiz from '../../components/active-quiz';\r\nimport FinishedQuiz from '../../components/finished-quiz';\r\nimport Loader from '../../components/ui/loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../redux/action/quiz';\r\n\r\nconst Quiz = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        props.fetchQuizById(props.match.params.id);\r\n        return () => props.retryQuiz();\r\n    }, [])\r\n\r\n    const onAnswerClickHandler = (answerId) => {\r\n        props.quizAnswerClick(answerId)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.quiz}>\r\n            <div className={classes['quiz-wrapper']}>\r\n                {\r\n                    props.loading ? <Loader /> :\r\n                    props.isFinished ? <FinishedQuiz onRetry={props.retryQuiz} results={props.results} quiz={props.quiz}  /> :\r\n                    (\r\n                        <>\r\n                        <h1>Ответьте на все вопросы</h1>\r\n                        <ActiveQuiz \r\n                        quiz={props.quiz[props.activeQuestion]} \r\n                        onAnswerClick={onAnswerClickHandler} \r\n                        quizLength={props.quiz.length}\r\n                        activeQuestion={props.activeQuestion}\r\n                        state={props.stateAnswer}/>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.quiz.error,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        stateAnswer: state.quiz.stateAnswer,\r\n        isFinished: state.quiz.isFinished,\r\n        results:  state.quiz.results,\r\n        quiz:  state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        fetchQuizById: (quizId) => dispatch(fetchQuizById(quizId)),\r\n        quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import Quiz from './quiz';\r\nexport default Quiz;","import React from 'react'\r\nimport classes from './input.module.css';\r\n\r\nconst Input = (props) => {\r\n\r\n    const isInvalid = ({ valid, touched, shouldValidate }) => {\r\n        return !valid && touched && shouldValidate\r\n    }\r\n    \r\n    const inputType = props.type ? props.type : 'text';\r\n    const htmlFor = inputType + Math.random();\r\n    let cls = [classes.input];\r\n\r\n    if ( isInvalid(props) ) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input value={props.value} onChange={props.onChange} id={htmlFor} type={inputType} onBlur={props.onBlur}/>\r\n            {\r\n                isInvalid(props) ?\r\n                    <span className={classes.error}>{ props.errorMessage }</span>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nInput.defaultProps = {\r\n    errorMessage: 'Введите правильное значение!'\r\n}\r\n\r\nexport default Input;\r\n","import Input from './input';\r\nexport default Input;","export const formFramework = (config, validation) => {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        value: '',\r\n        touched: false\r\n    }   \r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if ( !validation ) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if ( validation.required ) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n\r\n    let isValid = true;\r\n\r\n    for (let control in formControls) {\r\n        if ( formControls.hasOwnProperty(control) ) {\r\n            isValid = formControls[control].valid === true && isValid;\r\n        }\r\n    }\r\n    \r\n\r\n    return isValid;\r\n}","const Auxiliary = ({ children }) => {\r\n    return children;\r\n}\r\n\r\nexport default Auxiliary;\r\n","import Select from './select';\r\nexport default Select;","import React from 'react';\r\nimport classes from './select.module.css';\r\n\r\nconst Select = (props) => {\r\n    const htmlFor = props.label + Math.random();\r\n\r\n    return (\r\n        <div className={classes.select}>\r\n            <label htmlFor={htmlFor}>{ props.label }</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {\r\n                    props.options.map((option, index) => {\r\n                        return (\r\n                            <option\r\n                                key={option.text + index}\r\n                                value={option.value}\r\n                            >\r\n                                { option.text }\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React, {useState} from 'react';\r\nimport classes from './quiz-creator.module.css';\r\nimport Input from '../../components/ui/input'\r\nimport {formFramework, validate, validateForm} from '../../form/form-framework';\r\nimport Auxiliary from '../../components/auxiliary'\r\nimport Button from '../../components/ui/button';\r\nimport Select from '../../components/ui/select';\r\nimport { connect } from 'react-redux';\r\nimport { addQuizQuestion, createQuiz } from '../../redux/action/quiz-creator';\r\n\r\nfunction createOptionCotrol(number) {\r\n    return formFramework({\r\n        label: 'Вариант ' + number,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number,\r\n    }, { required: true })\r\n}\r\n\r\nfunction createFormCotrols() {\r\n    return {\r\n        question: formFramework({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, { required: true }),\r\n        option1: createOptionCotrol(1),\r\n        option2: createOptionCotrol(2),\r\n        option3: createOptionCotrol(3),\r\n        option4: createOptionCotrol(4),\r\n    }\r\n}\r\n\r\nconst QuizCreator = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormCotrols()\r\n    });\r\n\r\n    const submitHandler = () => {\r\n        console.log('submit')\r\n    }\r\n\r\n    function addQuestion(e) {\r\n        e.preventDefault();\r\n\r\n        const { question, option1, option2, option3, option4 } = state.formControls;\r\n\r\n        let quizItem = {\r\n            id: props.quiz.length + 1,\r\n            question: question.value,\r\n            rightAnswerId: state.rightAnswerId,\r\n            answers: [\r\n                { id: option1.id, answer: option1.value },\r\n                { id: option2.id, answer: option2.value },\r\n                { id: option3.id, answer: option3.value },\r\n                { id: option4.id, answer: option4.value },\r\n            ]\r\n        }\r\n\r\n        props.addQuizQuestion(quizItem)\r\n\r\n        setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormCotrols()\r\n        });\r\n    }\r\n\r\n    function createQuiz(e) {\r\n        e.preventDefault();\r\n        \r\n        setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormCotrols()\r\n        });\r\n \r\n        props.createQuiz();\r\n        \r\n    }\r\n\r\n    function changeHandler(value, controlName) {\r\n        let formControls = { ...state.formControls };\r\n        let control = { ...formControls[controlName] };\r\n\r\n        control.value = value;\r\n        control.touched = true;\r\n        control.valid = validate(control.value, control.validation)\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = validateForm(formControls);\r\n\r\n        setState({\r\n            ...state,\r\n            formControls,\r\n            isFormValid,\r\n            })\r\n    }\r\n\r\n    const renderControls = () => {\r\n        return Object.keys(state.formControls).map((key, index) => {\r\n            const control = state.formControls[key];\r\n            return (\r\n                <Auxiliary key={index}>\r\n                    <Input \r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={(e) => changeHandler(e.target.value, key)}\r\n                    />\r\n                    { index === 0 ? <hr /> : null }\r\n                </Auxiliary>\r\n                \r\n            );\r\n        })\r\n    }\r\n\r\n    function selectChangeHandler(e) {\r\n        setState({\r\n            ...state,\r\n            rightAnswerId: e.target.value\r\n        })\r\n    }\r\n\r\n    const select = <Select \r\n                        label={'Выберите правильный ответ'}\r\n                        value={state.rightAnswerId}\r\n                        onChange={selectChangeHandler}\r\n                        options={[\r\n                            {text: 1, value: 1},\r\n                            {text: 2, value: 2},\r\n                            {text: 3, value: 3},\r\n                            {text: 4, value: 4}\r\n                        ]}\r\n                    />\r\n\r\n    return (\r\n        <div className={classes['quiz-creator']}>\r\n            <div>\r\n                <h1>Создать тест</h1>\r\n                <form onSubmit={submitHandler}>\r\n                    {\r\n                        renderControls(state)\r\n                    }\r\n                    {\r\n                        select\r\n                    }\r\n                    <Button disabled={!state.isFormValid} onClick={(e) => addQuestion(e) } type=\"success\">Добавить вопрос</Button>\r\n                    <Button disabled={props.quiz.length === 0} onClick={(e) => createQuiz(e) } type=\"primary\">Создать тест</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addQuizQuestion: (item) => dispatch(addQuizQuestion(item)),\r\n        createQuiz: () => dispatch(createQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\r\n","import QuizCreator from './quiz-creator';\r\nexport default QuizCreator;","import { ADD_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './action-types';\r\nimport axios from 'axios';\r\n\r\n\r\nexport function addQuizQuestion(item) {\r\n    return {\r\n        type: ADD_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nfunction resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport const createQuiz = () => {\r\n    return async (dispatch, getState) => {\r\n        await  axios.post('https://react-quiz-3d8cb.firebaseio.com/quizes.json', getState().create.quiz);\r\n        dispatch(resetQuizCreation());\r\n    }\r\n}","import React, {useEffect, useCallback} from 'react'\r\nimport classes from './quiz-list.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../../components/ui/loader';\r\nimport {connect} from 'react-redux';\r\nimport { fetchQuizes } from '../../redux/action/quiz';\r\n\r\nconst QuizList = (props) => {\r\n\r\n    const fetchData = useCallback(props.fetchQuizes, [props.fetchQuizes])\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData])\r\n\r\n    const renderQuizes = () => {\r\n        return props.quizes.map((quiz) => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <Link to={'/quiz/' + quiz.id}>{ quiz.name }</Link>\r\n                </li>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes['quiz-list']}>\r\n            <div>\r\n                <h1>Список тестов</h1>\r\n                {\r\n                    props.loading ?\r\n                        <Loader />\r\n                        : <ul>\r\n                            {\r\n                                renderQuizes()\r\n                            }\r\n                        </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading,\r\n        error: state.quiz.error\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () =>  dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\r\n","import QuizList from './quiz-list';\r\nexport default QuizList;","import axios from 'axios';\r\nimport { AUTH_SUCCESS, LOGOUT } from './action-types';\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async (dispatch) => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCLvaIxcnyZoy_be6BRJ6opkuTv4qrbGOw';\r\n        if ( isLogin ) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCLvaIxcnyZoy_be6BRJ6opkuTv4qrbGOw';\r\n        }\r\n\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n        \r\n        let expiresIn = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expiresIn', expiresIn)\r\n\r\n        dispatch(authSuccess(data.idToken));\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return async (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\n\r\nexport function autoLogin() {\r\n    return (dispatch) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expiresIn'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token));\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expiresIn')\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport classes from './auth.module.css';\r\nimport Button from '../../components/ui/button';\r\nimport Input from '../../components/ui/input';\r\nimport {auth} from '../../redux/action/auth'\r\nimport {connect} from 'react-redux';\r\n\r\nfunction validateEmail(email) {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n}\r\n\r\nconst Auth = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                valid: false,\r\n                errorMessage: 'Введите корректный email',\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                valid: false,\r\n                errorMessage: 'Введите корректный пароль',\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    function isValid(value, validation) {\r\n        if ( !validation ) {\r\n            return true;\r\n        }\r\n        \r\n        let valid = true;\r\n\r\n        if ( validation.required ) {\r\n            valid = value.trim() !== '' ? true : false;\r\n        }\r\n        if ( validation.email ) {\r\n            valid = validateEmail(value);\r\n        }\r\n        if( validation.minLength ) {\r\n            valid = value && value.indexOf(' ') === -1 && value.length >= 6;\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    const changeHandler = (e, controlName) => {\r\n        let formControls = { ...state.formControls };\r\n        let control = { ...formControls[controlName] };\r\n        \r\n        control.value = e.target.value;\r\n        control.valid = isValid(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach((key) => {\r\n            isFormValid = formControls[key].valid && isFormValid;\r\n        })\r\n\r\n        setState({ isFormValid, formControls })\r\n    }\r\n    \r\n    function inputTouchedHandler(controlName) {\r\n        let formControls = { ...state.formControls };\r\n        let control = { ...formControls[controlName] };\r\n        control.touched = true;\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n        \r\n        Object.keys(formControls).forEach((key) => {\r\n            isFormValid = formControls[key].valid && isFormValid;\r\n        })\r\n\r\n        setState({ isFormValid, formControls })\r\n    }\r\n\r\n    const renderInputs = () => {\r\n        return Object.keys(state.formControls).map((key, index) => {\r\n            const control = state.formControls[key];\r\n            return (\r\n                <Input  \r\n                    key={control.type + index}\r\n                    label={control.label}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    value={control.value}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={(event) => changeHandler(event, key)}\r\n                    onBlur={(event) => inputTouchedHandler(key)}\r\n                />\r\n            );\r\n        })\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        props.auth(state.formControls.email.value, state.formControls.password.value, true)\r\n\r\n    }\r\n\r\n    const registerHandler = async (e) => {\r\n        props.auth(state.formControls.email.value, state.formControls.password.value, false)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n    }\r\n    return (\r\n        <div className={classes.auth}>\r\n            <div>\r\n                <h1>Авторизация</h1>\r\n                <form onSubmit={submitHandler}>\r\n                    { renderInputs() }\r\n                    <Button disabled={!state.isFormValid} onClick={loginHandler} type={'success'}>Войти</Button>\r\n                    <Button disabled={!state.isFormValid} onClick={registerHandler} type={'primary'}>Регистрация</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n","import Auth from './auth';\r\nexport default Auth;","import React, { useEffect } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/action/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Logout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.logout();\r\n    }, [])\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import Logout from './logout';\r\nexport default Logout;","import React, {useEffect} from 'react'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Layout from '../../hoc/layout';\r\nimport Quiz from '../../containers/quiz';\r\nimport QuizCreator from '../../containers/quiz-creator';\r\nimport QuizList from '../../containers/quiz-list';\r\nimport Auth from '../../containers/auth';\r\nimport { connect } from 'react-redux';\r\nimport Logout from '../logout';\r\nimport {autoLogin} from '../../redux/action/auth'\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.autoLogin();\r\n    }, [])\r\n\r\n    let routes = (\r\n        <Switch>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Route path=\"/quiz/:id\" component={Quiz} />\r\n            <Route path=\"/\" exact component={QuizList} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n\r\n    if (props.isAuthenticated) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/quiz-creator\" component={QuizCreator} />\r\n                <Route path=\"/quiz/:id\" component={Quiz} />\r\n                <Route path=\"/logout\" component={Logout} />\r\n                <Route path=\"/\" exact component={QuizList} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                { routes }\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nfunction mapDispachToProps(dispatch) {\r\n    return {\r\n        autoLogin: () => dispatch(autoLogin())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(App));\r\n","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './redux/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport './index.css';\r\n\r\nimport App from './components/app';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}